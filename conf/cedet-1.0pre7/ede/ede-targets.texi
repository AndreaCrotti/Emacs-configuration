@c -*-texinfo-*-
@c
@c $Id: ede-targets.texi,v 1.5 2010/01/07 02:15:42 zappo Exp $
@c

@c The next line is for the back-search to see what node this one
@c resides in.

@c @node Targets,
@c @chapter Target Listing

@c This command is a convenience to help rebuild this file.  Use C-x C-e
@c on the expression below to rebuild the entire index (but only
@c after loading in all relevant source files.)

@c (eieiodoc-class ede-target "tg")
@menu
* ede-target ::
*  ede-cpp-root-target ::
*  ede-emacs-target-c ::
*  ede-emacs-target-el ::
*  ede-emacs-target-misc ::
*  ede-linux-target-c ::
*  ede-linux-target-misc ::
*  ede-maven-target-java ::
*  ede-maven-target-c ::
*  ede-maven-target-misc ::
*  ede-simple-target ::
*  ede-proj-target ::
*   ede-proj-target-makefile ::
*    semantic-ede-proj-target-grammar ::
*    ede-proj-target-makefile-objectcode ::
*     ede-proj-target-makefile-archive ::
*     ede-proj-target-makefile-program ::
*      ede-proj-target-makefile-shared-object ::
*    ede-proj-target-elisp ::
*     ede-proj-target-elisp-autoloads ::
*    ede-proj-target-makefile-miscelaneous ::
*    ede-proj-target-makefile-info ::
*   ede-proj-target-aux ::
*   ede-proj-target-scheme ::
*  project-am-target ::
*   project-am-objectcode ::
*    project-am-program ::
*    project-am-lib ::
*   project-am-header ::
*    project-am-header-noinst ::
*    project-am-header-inst ::
*   project-am-lisp ::
*   project-am-texinfo ::
*   project-am-man ::
@end menu


@node ede-target, ede-cpp-root-target,  , Targets
@comment  node-name,  next,  previous,  up
@section ede-target
@tgindex ede-target

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item ede-target
@table @asis
@item Children:
@w{@xref{ede-cpp-root-target},} @w{@xref{ede-emacs-target-c},} @w{@xref{ede-emacs-target-el},} @w{@xref{ede-emacs-target-misc},} @w{@xref{ede-linux-target-c},} @w{@xref{ede-linux-target-misc},} @w{@xref{ede-maven-target-java},} @w{@xref{ede-maven-target-c},} @w{@xref{ede-maven-target-misc},} @w{@xref{ede-simple-target},} @w{@xref{ede-proj-target},} @w{@xref{project-am-target}.} 
@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-target

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@item :source
Type: @code{list} @*
Default Value: @code{nil}

Source files in this target.
@refill

@item :versionsource
Type: @code{list} @*
Default Value: @code{nil}

Source files with a version string in them.
These files are checked for a version string whenever the EDE version
of the master project is changed.  When strings are found, the version
previously there is updated.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method ede-preprocessor-map :AFTER this 
Get the pre-processor map for project @var{THIS}.
@end deffn

@deffn Method eieio-speedbar-description :AFTER obj 
Provide a speedbar description for @var{OBJ}.
@end deffn

@deffn Method project-compile-target :AFTER obj &optional command 
Compile the current target @var{OBJ}.
Argument @var{COMMAND} is the command to use for compiling the target.
@end deffn

@deffn Method project-debug-target :AFTER obj 
Run the current project target @var{OBJ} in a debugger.
@end deffn

@deffn Method ede-convert-path :AFTER this path 
Convert path in a standard way for a given project.
Default to making it project relative.
Argument @var{THIS} is the project to convert @var{PATH} to.
@end deffn

@deffn Method ede-name :AFTER this 
Return the name of @var{THIS} targt.
@end deffn

@deffn Method ede-target-buffer-in-sourcelist :AFTER this buffer source 
Return non-@code{nil} if object @var{THIS} is in @var{BUFFER} to a @var{SOURCE} list.
Handles complex path issues.
@end deffn

@deffn Method eieio-speedbar-derive-line-path :AFTER obj &optional depth 
Return the path to @var{OBJ}.
Optional @var{DEPTH} is the depth we start at.
@end deffn

@deffn Method ede-buffer-header-file :AFTER this buffer 
There are no default header files in EDE.
Do a quick check to see if there is a Header tag in this buffer.
@end deffn

@deffn Method project-remove-file :AFTER ot fnnd 
Remove the current buffer from project target @var{OT}.
Argument @var{FNND} is an argument.
@end deffn

@deffn Method ede-buffer-documentation-files :AFTER this buffer 
Check for some documentation files for @var{THIS}.
Also do a quick check to see if there is a Documentation tag in this @var{BUFFER}.
@end deffn

@deffn Method ede-buffer-mine :AFTER this buffer 
Return non-@code{nil} if object @var{THIS} lays claim to the file in @var{BUFFER}.
@end deffn

@deffn Method ede-map-target-buffers :AFTER this proc 
For @var{THIS}, execute @var{PROC} on all buffers belonging to @var{THIS}.
@end deffn

@deffn Method eieio-speedbar-child-description :AFTER obj 
Provide a speedbar description for a plain-child of @var{OBJ}.
A plain child is a child element which is not an EIEIO object.
@end deffn

@deffn Method ede-object-keybindings :BEFORE this 
Retrieves the slot @code{keybindings} from an object of class @code{ede-target}
@end deffn

@deffn Method ede-description :AFTER this 
Return a description suitable for the minibuffer about @var{THIS}.
@end deffn

@deffn Method eieio-speedbar-object-children :AFTER this 
Return the list of speedbar display children for @var{THIS}.
@end deffn

@deffn Method ede-system-include-path :AFTER this 
Get the system include path used by project @var{THIS}.
@end deffn

@deffn Method ede-object-sourcecode :BEFORE this 
Retrieves the slot @code{sourcetype} from an object of class @code{ede-target}
@end deffn

@deffn Method ede-expand-filename :AFTER this filename &optional force 
Return a fully qualified file name based on target @var{THIS}.
@var{FILENAME} should a a filename which occurs in a directory in which @var{THIS} works.
Optional argument @var{FORCE} forces the default filename to be provided even if it
doesn't exist.
@end deffn

@deffn Method ede-menu-items-build :AFTER obj &optional current 
Return a list of menu items for building target @var{OBJ}.
If optional argument @var{CURRENT} is non-@code{nil}, return sub-menu code.
@end deffn

@deffn Method ede-want-file-p :AFTER this file 
Return non-@code{nil} if @var{THIS} target wants @var{FILE}.
@end deffn

@deffn Method ede-update-version-in-source :AFTER this version 
In sources for @var{THIS}, change version numbers to @var{VERSION}.
@end deffn

@deffn Method project-delete-target :AFTER ot 
Delete the current target @var{OT} from its parent project.
@end deffn

@deffn Method ede-target-sourcecode :AFTER this 
Return the sourcecode objects which @var{THIS} permits.
@end deffn

@deffn Method eieio-speedbar-child-make-tag-lines :AFTER this depth 
Create a speedbar tag line for a child of @var{THIS}.
It has depth @var{DEPTH}.
@end deffn

@deffn Method eieio-speedbar-object-buttonname :AFTER object 
Return a string to use as a speedbar button for @var{OBJECT}.
@end deffn

@deffn Method eieio-done-customizing :AFTER target 
Call this when a user finishes customizing @var{TARGET}.
@end deffn

@deffn Method project-edit-file-target :AFTER ot 
Edit the target @var{OT} associated w/ this file.
@end deffn

@deffn Method ede-documentation :AFTER this 
Return a list of files that provides documentation.
Documentation is not for object @var{THIS}, but is provided by @var{THIS} for other
files in the project.
@end deffn

@deffn Method ede-want-file-source-p :AFTER this file 
Return non-@code{nil} if @var{THIS} target wants @var{FILE}.
@end deffn

@deffn Method ede-want-file-auxiliary-p :AFTER this file 
Return non-@code{nil} if @var{THIS} target wants @var{FILE}.
@end deffn

@deffn Method project-add-file :AFTER ot file 
Add the current buffer into project project target @var{OT}.
Argument @var{FILE} is the file to add.
@end deffn

@deffn Method ede-target-name :AFTER this 
Return the name of @var{THIS} target, suitable for make or debug style commands.
@end deffn

@deffn Method ede-object-menu :BEFORE this 
Retrieves the slot @code{menu} from an object of class @code{ede-target}
@end deffn


@node ede-cpp-root-target, ede-emacs-target-c, ede-target, Targets
@comment  node-name,  next,  previous,  up
@section ede-cpp-root-target
@tgindex ede-cpp-root-target

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item ede-cpp-root-target
No children
@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-cpp-root-target

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method ede-preprocessor-map :AFTER this 
Get the pre-processor map for project @var{THIS}.
@end deffn

@deffn Method ede-system-include-path :AFTER this 
Get the system include path used by project @var{THIS}.
@end deffn


@node ede-emacs-target-c, ede-emacs-target-el, ede-cpp-root-target, Targets
@comment  node-name,  next,  previous,  up
@section ede-emacs-target-c
@tgindex ede-emacs-target-c

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item ede-emacs-target-c
No children
@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-emacs-target-c

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method ede-preprocessor-map :AFTER this 
Get the pre-processor map for Emacs C code.
All files need the macros from lisp.h!
@end deffn


@node ede-emacs-target-el, ede-emacs-target-misc, ede-emacs-target-c, Targets
@comment  node-name,  next,  previous,  up
@section ede-emacs-target-el
@tgindex ede-emacs-target-el

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item ede-emacs-target-el
No children
@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-emacs-target-el

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table

@node ede-emacs-target-misc, ede-linux-target-c, ede-emacs-target-el, Targets
@comment  node-name,  next,  previous,  up
@section ede-emacs-target-misc
@tgindex ede-emacs-target-misc

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item ede-emacs-target-misc
No children
@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-emacs-target-misc

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table

@node ede-linux-target-c, ede-linux-target-misc, ede-emacs-target-misc, Targets
@comment  node-name,  next,  previous,  up
@section ede-linux-target-c
@tgindex ede-linux-target-c

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item ede-linux-target-c
No children
@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-linux-target-c

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method ede-preprocessor-map :AFTER this 
Get the pre-processor map for Linux C code.
All files need the macros from lisp.h!
@end deffn


@node ede-linux-target-misc, ede-maven-target-java, ede-linux-target-c, Targets
@comment  node-name,  next,  previous,  up
@section ede-linux-target-misc
@tgindex ede-linux-target-misc

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item ede-linux-target-misc
No children
@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-linux-target-misc

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table

@node ede-maven-target-java, ede-maven-target-c, ede-linux-target-misc, Targets
@comment  node-name,  next,  previous,  up
@section ede-maven-target-java
@tgindex ede-maven-target-java

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item ede-maven-target-java
No children
@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-maven-target-java

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table

@node ede-maven-target-c, ede-maven-target-misc, ede-maven-target-java, Targets
@comment  node-name,  next,  previous,  up
@section ede-maven-target-c
@tgindex ede-maven-target-c

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item ede-maven-target-c
No children
@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-maven-target-c

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table

@node ede-maven-target-misc, ede-simple-target, ede-maven-target-c, Targets
@comment  node-name,  next,  previous,  up
@section ede-maven-target-misc
@tgindex ede-maven-target-misc

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item ede-maven-target-misc
No children
@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-maven-target-misc

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table

@node ede-simple-target, ede-proj-target, ede-maven-target-misc, Targets
@comment  node-name,  next,  previous,  up
@section ede-simple-target
@tgindex ede-simple-target

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item ede-simple-target
No children
@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-simple-target

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table

@node ede-proj-target, ede-proj-target-makefile, ede-simple-target, Targets
@comment  node-name,  next,  previous,  up
@section ede-proj-target
@tgindex ede-proj-target

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item ede-proj-target
@table @asis
@item Children:
@w{@xref{ede-proj-target-makefile},} @w{@xref{ede-proj-target-aux},} @w{@xref{ede-proj-target-scheme}.} 
@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-proj-target

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@item :auxsource
Type: @code{list} @*
Default Value: @code{nil}

Auxilliary source files included in this target.
Each of these is considered equivalent to a source file, but it is not
distributed, and each should have a corresponding rule to build it.
@refill

@item :compiler
Type: @code{(or null symbol)} @*
Default Value: @code{nil}

The compiler to be used to compile this object.
This should be a symbol, which contains the object defining the compiler.
This enables save/restore to do so by name, permitting the sharing
of these compiler resources, and global customization thereof.
@refill

@item :linker
Type: @code{(or null symbol)} @*
Default Value: @code{nil}

The linker to be used to link compiled sources for this object.
This should be a symbol, which contains the object defining the linker.
This enables save/restore to do so by name, permitting the sharing
of these linker resources, and global customization thereof.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-compile-target :AFTER obj &optional command 
Compile the current target @var{OBJ}.
Argument @var{COMMAND} is the command to use for compiling the target.
@end deffn

@deffn Method project-rescan :AFTER this readstream 
Rescan target @var{THIS} from the read list @var{READSTREAM}.
@end deffn

@deffn Method project-debug-target :AFTER obj 
Run the current project target @var{OBJ} in a debugger.
@end deffn

@deffn Method ede-proj-configure-add-missing :AFTER this 
Query if any files needed by @var{THIS} provided by automake are missing.
Results in --add-missing being passed to automake.
@end deffn

@deffn Method ede-proj-flush-autoconf :AFTER this 
Flush the configure file (current buffer) to accomodate @var{THIS}.
By flushing, remove any cruft that may be in the file.  Subsequent
calls to @dfn{ede-proj-tweak-autoconf} can restore items removed by flush.
@end deffn

@deffn Method ede-proj-makefile-insert-rules :AFTER this 
Insert rules needed by @var{THIS} target.
@end deffn

@deffn Method project-remove-file :AFTER target file 
For @var{TARGET}, remove @var{FILE}.
@var{FILE} must be massaged by @dfn{ede-convert-path}.
@end deffn

@deffn Method ede-buffer-mine :AFTER this buffer 
Return @code{t} if object @var{THIS} lays claim to the file in @var{BUFFER}.
@end deffn

@deffn Method ede-proj-configure-create-missing :AFTER this 
Add any missing files for @var{THIS} by creating them.
@end deffn

@deffn Method ede-proj-makefile-sourcevar :AFTER this 
Return the variable name for @var{THIS}'s sources.
@end deffn

@deffn Method ede-proj-makefile-insert-variables :AFTER this &optional moresource 
Insert variables needed by target @var{THIS}.
Optional argument @var{MORESOURCE} is a list of additional sources to add to the
sources variable.
@end deffn

@deffn Method ede-proj-makefile-insert-automake-post-variables :AFTER this 
Insert variables needed by target @var{THIS} in Makefile.am after SOURCES.
@end deffn

@deffn Method ede-proj-makefile-insert-dist-dependencies :AFTER this 
Insert any symbols that the DIST rule should depend on.
Argument @var{THIS} is the target that should insert stuff.
@end deffn

@deffn Method ede-proj-linkers :AFTER obj 
List of linkers being used by @var{OBJ}.
If the @code{linker} slot is empty, concoct one on a first match found
basis for any given type from the @code{availablelinkers} slot.
Otherwise, return the @code{linker} slot.
Converts all symbols into the objects to be used.
@end deffn

@deffn Method ede-proj-makefile-garbage-patterns :AFTER this 
Return a list of patterns that are considered garbage to @var{THIS}.
These are removed with make clean.
@end deffn

@deffn Method ede-proj-tweak-autoconf :AFTER this 
Tweak the configure file (current buffer) to accomodate @var{THIS}.
@end deffn

@deffn Method ede-proj-compilers :AFTER obj 
List of compilers being used by @var{OBJ}.
If the @code{compiler} slot is empty, concoct one on a first match found
basis for any given type from the @code{availablecompilers} slot.
Otherwise, return the @code{compiler} slot.
Converts all symbols into the objects to be used.
@end deffn

@deffn Method project-delete-target :AFTER this 
Delete the current target @var{THIS} from its parent project.
@end deffn

@deffn Method ede-proj-makefile-target-name :AFTER this 
Return the name of the main target for @var{THIS} target.
@end deffn

@deffn Method eieio-done-customizing :AFTER target 
Call this when a user finishes customizing this object.
Argument @var{TARGET} is the project we are completing customization on.
@end deffn

@deffn Method ede-proj-makefile-insert-user-rules :AFTER this 
Insert user specified rules needed by @var{THIS} target.
@end deffn

@deffn Method project-add-file :AFTER this file 
Add to target @var{THIS} the current buffer represented as @var{FILE}.
@end deffn

@deffn Method ede-proj-makefile-insert-automake-pre-variables :AFTER this 
Insert variables needed by target @var{THIS} in Makefile.am before SOURCES.
@end deffn

@deffn Method ede-proj-makefile-insert-dist-filepatterns :AFTER this 
Insert any symbols that the DIST rule should depend on.
Argument @var{THIS} is the target that should insert stuff.
@end deffn

@deffn Method ede-proj-makefile-dependency-files :AFTER this 
Return a list of source files to convert to dependencies.
Argument @var{THIS} is the target to get sources from.
@end deffn

@deffn Method ede-proj-makefile-insert-source-variables :AFTER this &optional moresource 
Insert the source variables needed by @var{THIS}.
Optional argument @var{MORESOURCE} is a list of additional sources to add to the
sources variable.
@end deffn


@node ede-proj-target-makefile, semantic-ede-proj-target-grammar, ede-proj-target, Targets
@comment  node-name,  next,  previous,  up
@section ede-proj-target-makefile
@tgindex ede-proj-target-makefile

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{ede-proj-target}.}
@table @code
@item ede-proj-target-makefile
@table @asis
@item Children:
@w{@xref{semantic-ede-proj-target-grammar},} @w{@xref{ede-proj-target-makefile-objectcode},} @w{@xref{ede-proj-target-elisp},} @w{@xref{ede-proj-target-makefile-miscelaneous},} @w{@xref{ede-proj-target-makefile-info}.} 
@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-proj-target-makefile

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@item :makefile
Type: @code{string} @*
Default Value: @code{"Makefile"}

File name of generated Makefile.
@refill

@item :partofall
Type: @code{boolean} @*
Default Value: @code{t}

Non @code{nil} means the rule created is part of the all target.
Setting this to @code{nil} creates the rule to build this item, but does not
include it in the ALL`all:' rule.
@refill

@item :configuration-variables
Type: @code{list} @*
Default Value: @code{nil}

Makefile variables appended to use in different configurations.
These variables are used in the makefile when a configuration becomes active.
Target variables are always renamed such as foo_CFLAGS, then included into
commands where the variable would usually appear.
@refill

@item :rules
Type: @code{list} @*
Default Value: @code{nil}

Arbitrary rules and dependencies needed to make this target.
It is safe to leave this blank.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method ede-proj-makefile-dependencies :AFTER this 
Return a string representing the dependencies for @var{THIS}.
Some compilers only use the first element in the dependencies, others
have a list of intermediates (object files), and others don't care.
This allows customization of how these elements appear.
@end deffn

@deffn Method project-compile-target :AFTER obj &optional command 
Compile the current target program @var{OBJ}.
Optional argument @var{COMMAND} is the s the alternate command to use.
@end deffn

@deffn Method ede-proj-makefile-insert-rules :AFTER this 
Insert rules needed by @var{THIS} target.
@end deffn

@deffn Method ede-proj-makefile-insert-variables :AFTER this &optional moresource 
Insert variables needed by target @var{THIS}.
Optional argument @var{MORESOURCE} is a list of additional sources to add to the
sources variable.
@end deffn

@deffn Method ede-proj-makefile-insert-commands :AFTER this 
Insert the commands needed by target @var{THIS}.
For targets, insert the commands needed by the chosen compiler.
@end deffn

@deffn Method ede-proj-makefile-configuration-variables :AFTER this configuration 
Return a list of configuration variables from @var{THIS}.
Use @var{CONFIGURATION} as the current configuration to query.
@end deffn


@node semantic-ede-proj-target-grammar, ede-proj-target-makefile-objectcode, ede-proj-target-makefile, Targets
@comment  node-name,  next,  previous,  up
@section semantic-ede-proj-target-grammar
@tgindex semantic-ede-proj-target-grammar

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{ede-proj-target}.}
@table @code
@item @w{@xref{ede-proj-target-makefile}.}
@table @code
@item semantic-ede-proj-target-grammar
No children
@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type semantic-ede-proj-target-grammar

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-compile-target :AFTER obj 
Compile all sources in a Lisp target @var{OBJ}.
@end deffn

@deffn Method ede-proj-makefile-insert-rules :AFTER this 
Insert rules needed by @var{THIS} target.
@end deffn

@deffn Method ede-buffer-mine :AFTER this buffer 
Return @code{t} if object @var{THIS} lays claim to the file in @var{BUFFER}.
Lays claim to all -by.el, and -wy.el files.
@end deffn

@deffn Method ede-proj-makefile-sourcevar :AFTER this 
Return the variable name for @var{THIS}'s sources.
@end deffn

@deffn Method ede-proj-makefile-insert-dist-dependencies :AFTER this 
Insert dist dependencies, or intermediate targets.
This makes sure that all grammar lisp files are created before the dist
runs, so they are always up to date.
Argument @var{THIS} is the target that should insert stuff.
@end deffn


@node ede-proj-target-makefile-objectcode, ede-proj-target-makefile-archive, semantic-ede-proj-target-grammar, Targets
@comment  node-name,  next,  previous,  up
@section ede-proj-target-makefile-objectcode
@tgindex ede-proj-target-makefile-objectcode

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{ede-proj-target}.}
@table @code
@item @w{@xref{ede-proj-target-makefile}.}
@table @code
@item ede-proj-target-makefile-objectcode
@table @asis
@item Children:
@w{@xref{ede-proj-target-makefile-archive},} @w{@xref{ede-proj-target-makefile-program}.} 
@end table

@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-proj-target-makefile-objectcode

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@item :configuration-variables
Type: @code{list} @*
Default Value: @code{("debug" ("CFLAGS" . "-g") ("LDFLAGS" . "-g"))}

@xref{ede-proj-target-makefile}.
@end table

@end table
@subsection Specialized Methods

@deffn Method ede-buffer-header-file :AFTER this buffer 
There are no default header files.
@end deffn

@deffn Method ede-proj-makefile-sourcevar :AFTER this 
Return the variable name for @var{THIS}'s sources.
@end deffn

@deffn Method ede-proj-makefile-insert-variables :AFTER this &optional moresource 
Insert variables needed by target @var{THIS}.
Optional argument @var{MORESOURCE} is not used.
@end deffn

@deffn Method ede-proj-makefile-dependency-files :AFTER this 
Return a list of source files to convert to dependencies.
Argument @var{THIS} is the target to get sources from.
@end deffn


@node ede-proj-target-makefile-archive, ede-proj-target-makefile-program, ede-proj-target-makefile-objectcode, Targets
@comment  node-name,  next,  previous,  up
@section ede-proj-target-makefile-archive
@tgindex ede-proj-target-makefile-archive

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{ede-proj-target}.}
@table @code
@item @w{@xref{ede-proj-target-makefile}.}
@table @code
@item @w{@xref{ede-proj-target-makefile-objectcode}.}
@table @code
@item ede-proj-target-makefile-archive
No children
@end table

@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-proj-target-makefile-archive

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method ede-proj-makefile-insert-rules :AFTER this 
Create the make rule needed to create an archive for @var{THIS}.
@end deffn

@deffn Method ede-proj-makefile-insert-source-variables :PRIMARY this 
Insert bin_PROGRAMS variables needed by target @var{THIS}.
We aren't acutally inserting SOURCE details, but this is used by the
Makefile.am generator, so use it to add this important bin program.
@end deffn


@node ede-proj-target-makefile-program, ede-proj-target-makefile-shared-object, ede-proj-target-makefile-archive, Targets
@comment  node-name,  next,  previous,  up
@section ede-proj-target-makefile-program
@tgindex ede-proj-target-makefile-program

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{ede-proj-target}.}
@table @code
@item @w{@xref{ede-proj-target-makefile}.}
@table @code
@item @w{@xref{ede-proj-target-makefile-objectcode}.}
@table @code
@item ede-proj-target-makefile-program
@table @asis
@item Children:
@w{@xref{ede-proj-target-makefile-shared-object}.} 
@end table

@end table

@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-proj-target-makefile-program

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@item :ldlibs
Type: @code{list} @*
Default Value: @code{nil}

Libraries, such as "m" or "Xt" which this program depends on.
The linker flag "-l" is automatically prepended.  Do not include a "lib"
prefix, or a ".so" suffix.

Note: Currently only used for Automake projects.
@refill

@item :ldflags
Type: @code{list} @*
Default Value: @code{nil}

Additional flags to add when linking this target.
Use ldlibs to add addition libraries.  Use this to specify specific
options to the linker.

Note: Not currently used.  This bug needs to be fixed.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-debug-target :AFTER obj 
Debug a program target @var{OBJ}.
@end deffn

@deffn Method ede-proj-makefile-insert-rules :AFTER this 
Insert rules needed by @var{THIS} target.
@end deffn

@deffn Method ede-proj-makefile-insert-automake-post-variables :AFTER this 
Insert bin_PROGRAMS variables needed by target @var{THIS}.
@end deffn

@deffn Method ede-proj-makefile-insert-automake-pre-variables :AFTER this 
Insert bin_PROGRAMS variables needed by target @var{THIS}.
@end deffn


@node ede-proj-target-makefile-shared-object, ede-proj-target-elisp, ede-proj-target-makefile-program, Targets
@comment  node-name,  next,  previous,  up
@section ede-proj-target-makefile-shared-object
@tgindex ede-proj-target-makefile-shared-object

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{ede-proj-target}.}
@table @code
@item @w{@xref{ede-proj-target-makefile}.}
@table @code
@item @w{@xref{ede-proj-target-makefile-objectcode}.}
@table @code
@item @w{@xref{ede-proj-target-makefile-program}.}
@table @code
@item ede-proj-target-makefile-shared-object
No children
@end table

@end table

@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-proj-target-makefile-shared-object

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method ede-proj-configure-add-missing :AFTER this 
Query if any files needed by @var{THIS} provided by automake are missing.
Results in --add-missing being passed to automake.
@end deffn

@deffn Method ede-proj-makefile-sourcevar :AFTER this 
Return the variable name for @var{THIS}'s sources.
@end deffn

@deffn Method ede-proj-makefile-insert-automake-post-variables :AFTER this 
Insert bin_PROGRAMS variables needed by target @var{THIS}.
We need to override -program which has an LDADD element.
@end deffn

@deffn Method ede-proj-makefile-target-name :AFTER this 
Return the name of the main target for @var{THIS} target.
@end deffn

@deffn Method ede-proj-makefile-insert-automake-pre-variables :AFTER this 
Insert bin_PROGRAMS variables needed by target @var{THIS}.
We aren't acutally inserting SOURCE details, but this is used by the
Makefile.am generator, so use it to add this important bin program.
@end deffn


@node ede-proj-target-elisp, ede-proj-target-elisp-autoloads, ede-proj-target-makefile-shared-object, Targets
@comment  node-name,  next,  previous,  up
@section ede-proj-target-elisp
@tgindex ede-proj-target-elisp

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{ede-proj-target}.}
@table @code
@item @w{@xref{ede-proj-target-makefile}.}
@table @code
@item ede-proj-target-elisp
@table @asis
@item Children:
@w{@xref{ede-proj-target-elisp-autoloads}.} 
@end table

@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-proj-target-elisp

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@item :aux-packages
Type: @code{list} @*
Default Value: @code{nil}

Additional packages needed.
There should only be one toplevel package per auxiliary tool needed.
These packages location is found, and added to the compile time
load path.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-compile-target :AFTER obj 
Compile all sources in a Lisp target @var{OBJ}.
Bonus: Return a cons cell: (COMPILED . UPTODATE).
@end deffn

@deffn Method ede-proj-flush-autoconf :AFTER this 
Flush the configure file (current buffer) to accomodate @var{THIS}.
@end deffn

@deffn Method ede-buffer-mine :AFTER this buffer 
Return @code{t} if object @var{THIS} lays claim to the file in @var{BUFFER}.
Lays claim to all .elc files that match .el files in this target.
@end deffn

@deffn Method ede-proj-makefile-sourcevar :AFTER this 
Return the variable name for @var{THIS}'s sources.
@end deffn

@deffn Method ede-proj-tweak-autoconf :AFTER this 
Tweak the configure file (current buffer) to accomodate @var{THIS}.
@end deffn

@deffn Method ede-update-version-in-source :AFTER this version 
In a Lisp file, updated a version string for @var{THIS} to @var{VERSION}.
There are standards in Elisp files specifying how the version string
is found, such as a @code{-version} variable, or the standard header.
@end deffn


@node ede-proj-target-elisp-autoloads, ede-proj-target-makefile-miscelaneous, ede-proj-target-elisp, Targets
@comment  node-name,  next,  previous,  up
@section ede-proj-target-elisp-autoloads
@tgindex ede-proj-target-elisp-autoloads

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{ede-proj-target}.}
@table @code
@item @w{@xref{ede-proj-target-makefile}.}
@table @code
@item @w{@xref{ede-proj-target-elisp}.}
@table @code
@item ede-proj-target-elisp-autoloads
No children
@end table

@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-proj-target-elisp-autoloads

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@item :aux-packages
Type: @code{list} @*
Default Value: @code{("cedet-autogen")}

@xref{ede-proj-target-elisp}.
@item :autoload-file
Type: @code{string} @*
Default Value: @code{"loaddefs.el"}

The file that autoload definitions are placed in.
There should be one load defs file for a given package.  The load defs are created
for all Emacs Lisp sources that exist in the directory of the created target.
@refill

@item :autoload-dirs
Type: @code{list} @*
Default Value: @code{nil}

The directories to scan for autoload definitions.
If @code{nil} defaults to the current directory.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method ede-proj-makefile-dependencies :AFTER this 
Return a string representing the dependencies for @var{THIS}.
Always return an empty string for an autoloads generator.
@end deffn

@deffn Method project-compile-target :AFTER obj 
Create or update the autoload target.
@end deffn

@deffn Method ede-proj-flush-autoconf :AFTER this 
Flush the configure file (current buffer) to accomodate @var{THIS}.
@end deffn

@deffn Method ede-buffer-mine :AFTER this buffer 
Return @code{t} if object @var{THIS} lays claim to the file in @var{BUFFER}.
Lays claim to all .elc files that match .el files in this target.
@end deffn

@deffn Method ede-proj-makefile-sourcevar :AFTER this 
Return the variable name for @var{THIS}'s sources.
@end deffn

@deffn Method ede-proj-makefile-insert-dist-dependencies :AFTER this 
Insert any symbols that the DIST rule should depend on.
Emacs Lisp autoload files ship the generated .el files.
Argument @var{THIS} is the target which needs to insert an info file.
@end deffn

@deffn Method ede-proj-tweak-autoconf :AFTER this 
Tweak the configure file (current buffer) to accomodate @var{THIS}.
@end deffn

@deffn Method ede-update-version-in-source :AFTER this version 
In a Lisp file, updated a version string for @var{THIS} to @var{VERSION}.
There are standards in Elisp files specifying how the version string
is found, such as a @code{-version} variable, or the standard header.
@end deffn

@deffn Method ede-proj-compilers :AFTER obj 
List of compilers being used by @var{OBJ}.
If the @code{compiler} slot is empty, get the car of the compilers list.
@end deffn

@deffn Method ede-proj-makefile-insert-dist-filepatterns :AFTER this 
Insert any symbols that the DIST rule should distribute.
Emacs Lisp autoload files ship the generated .el files.
Argument @var{THIS} is the target which needs to insert an info file.
@end deffn

@deffn Method ede-proj-makefile-insert-source-variables :AFTER this &optional moresource 
Insert the source variables needed by @var{THIS}.
Optional argument @var{MORESOURCE} is a list of additional sources to add to the
sources variable.
@end deffn


@node ede-proj-target-makefile-miscelaneous, ede-proj-target-makefile-info, ede-proj-target-elisp-autoloads, Targets
@comment  node-name,  next,  previous,  up
@section ede-proj-target-makefile-miscelaneous
@tgindex ede-proj-target-makefile-miscelaneous

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{ede-proj-target}.}
@table @code
@item @w{@xref{ede-proj-target-makefile}.}
@table @code
@item ede-proj-target-makefile-miscelaneous
No children
@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-proj-target-makefile-miscelaneous

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@item :submakefile
Type: @code{string} @*
Default Value: @code{""}

Miscellaneous sources which have a specialized makefile.
The sub-makefile is used to build this target.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method ede-proj-makefile-insert-rules :AFTER this 
Create the make rule needed to create an archive for @var{THIS}.
@end deffn

@deffn Method ede-proj-makefile-sourcevar :AFTER this 
Return the variable name for @var{THIS}'s sources.
@end deffn

@deffn Method ede-proj-makefile-dependency-files :AFTER this 
Return a list of files which @var{THIS} target depends on.
@end deffn


@node ede-proj-target-makefile-info, ede-proj-target-aux, ede-proj-target-makefile-miscelaneous, Targets
@comment  node-name,  next,  previous,  up
@section ede-proj-target-makefile-info
@tgindex ede-proj-target-makefile-info

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{ede-proj-target}.}
@table @code
@item @w{@xref{ede-proj-target-makefile}.}
@table @code
@item ede-proj-target-makefile-info
No children
@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-proj-target-makefile-info

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@item :mainmenu
Type: @code{string} @*
Default Value: @code{""}

The main menu resides in this file.
All other sources should be included independently.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method ede-proj-configure-add-missing :AFTER this 
Query if any files needed by @var{THIS} provided by automake are missing.
Results in --add-missing being passed to automake.
@end deffn

@deffn Method object-write :AFTER this 
Before committing any change to @var{THIS}, make sure the mainmenu is first.
@end deffn

@deffn Method ede-proj-makefile-sourcevar :AFTER this 
Return the variable name for @var{THIS}'s sources.
@end deffn

@deffn Method ede-proj-makefile-insert-dist-dependencies :AFTER this 
Insert any symbols that the DIST rule should depend on.
Texinfo files want to insert generated `.info' files.
Argument @var{THIS} is the target which needs to insert an info file.
@end deffn

@deffn Method ede-proj-makefile-target-name :AFTER this 
Return the name of the main target for @var{THIS} target.
@end deffn

@deffn Method ede-documentation :AFTER this 
Return a list of files that provides documentation.
Documentation is not for object @var{THIS}, but is provided by @var{THIS} for other
files in the project.
@end deffn

@deffn Method ede-proj-makefile-insert-dist-filepatterns :AFTER this 
Insert any symbols that the DIST rule should depend on.
Texinfo files want to insert generated `.info' files.
Argument @var{THIS} is the target which needs to insert an info file.
@end deffn

@deffn Method ede-proj-makefile-insert-source-variables :AFTER this &optional moresource 
Insert the source variables needed by @var{THIS} info target.
Optional argument @var{MORESOURCE} is a list of additional sources to add to the
sources variable.
Does the usual for Makefile mode, but splits source into two variables
when working in Automake mode.
@end deffn


@node ede-proj-target-aux, ede-proj-target-scheme, ede-proj-target-makefile-info, Targets
@comment  node-name,  next,  previous,  up
@section ede-proj-target-aux
@tgindex ede-proj-target-aux

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{ede-proj-target}.}
@table @code
@item ede-proj-target-aux
No children
@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-proj-target-aux

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method ede-proj-makefile-sourcevar :AFTER this 
Return the variable name for @var{THIS}'s sources.
@end deffn


@node ede-proj-target-scheme, project-am-target, ede-proj-target-aux, Targets
@comment  node-name,  next,  previous,  up
@section ede-proj-target-scheme
@tgindex ede-proj-target-scheme

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{ede-proj-target}.}
@table @code
@item ede-proj-target-scheme
No children
@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type ede-proj-target-scheme

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@item :interpreter
Type: @code{string} @*
Default Value: @code{"guile"}

The preferred interpreter for this code.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method ede-proj-tweak-autoconf :AFTER this 
Tweak the configure file (current buffer) to accomodate @var{THIS}.
@end deffn


@node project-am-target, project-am-objectcode, ede-proj-target-scheme, Targets
@comment  node-name,  next,  previous,  up
@section project-am-target
@tgindex project-am-target

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item project-am-target
@table @asis
@item Children:
@w{@xref{project-am-objectcode},} @w{@xref{project-am-header},} @w{@xref{project-am-lisp},} @w{@xref{project-am-texinfo},} @w{@xref{project-am-man}.} 
@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type project-am-target

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-compile-target :AFTER obj &optional command 
Compile the current target.
Argument @var{COMMAND} is the command to use for compiling the target.
@end deffn

@deffn Method project-compile-target-command :AFTER this 
Default target to use when compiling a given target.
@end deffn

@deffn Method project-remove-file :AFTER ot fnnd 
Remove the current buffer from any project targets.
@end deffn

@deffn Method project-make-dist :AFTER this 
Run the current project in the debugger.
@end deffn

@deffn Method project-compile-project :AFTER obj &optional command 
Compile the entire current project.
Argument @var{COMMAND} is the command to use when compiling.
@end deffn

@deffn Method project-edit-file-target :AFTER obj 
Edit the target associated w/ this file.
@end deffn

@deffn Method project-add-file :AFTER ot 
Add the current buffer into a project.
@var{OT} is the object target.  DIR is the directory to start in.
@end deffn


@node project-am-objectcode, project-am-program, project-am-target, Targets
@comment  node-name,  next,  previous,  up
@section project-am-objectcode
@tgindex project-am-objectcode

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{project-am-target}.}
@table @code
@item project-am-objectcode
@table @asis
@item Children:
@w{@xref{project-am-program},} @w{@xref{project-am-lib}.} 
@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type project-am-objectcode

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-am-macro :AFTER this 
Return the default macro to 'edit' for this object type.
@end deffn

@deffn Method project-debug-target :AFTER obj 
Run the current project target in a debugger.
@end deffn

@deffn Method project-compile-target-command :AFTER this 
Default target to use when compiling an object code target.
@end deffn

@deffn Method ede-buffer-header-file :AFTER this buffer 
There are no default header files.
@end deffn

@deffn Method ede-buffer-mine :AFTER this buffer 
Return @code{t} if object @var{THIS} lays claim to the file in @var{BUFFER}.
@end deffn


@node project-am-program, project-am-lib, project-am-objectcode, Targets
@comment  node-name,  next,  previous,  up
@section project-am-program
@tgindex project-am-program

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{project-am-target}.}
@table @code
@item @w{@xref{project-am-objectcode}.}
@table @code
@item project-am-program
No children
@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type project-am-program

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@item :ldadd @*
Default Value: @code{nil}

Additional LD args.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-rescan :AFTER this 
Rescan object @var{THIS}.
@end deffn


@node project-am-lib, project-am-header, project-am-program, Targets
@comment  node-name,  next,  previous,  up
@section project-am-lib
@tgindex project-am-lib

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{project-am-target}.}
@table @code
@item @w{@xref{project-am-objectcode}.}
@table @code
@item project-am-lib
No children
@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type project-am-lib

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-rescan :AFTER this 
Rescan object @var{THIS}.
@end deffn


@node project-am-header, project-am-header-noinst, project-am-lib, Targets
@comment  node-name,  next,  previous,  up
@section project-am-header
@tgindex project-am-header

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{project-am-target}.}
@table @code
@item project-am-header
@table @asis
@item Children:
@w{@xref{project-am-header-noinst},} @w{@xref{project-am-header-inst}.} 
@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type project-am-header

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-rescan :AFTER this 
Rescan the Header sources.
@end deffn


@node project-am-header-noinst, project-am-header-inst, project-am-header, Targets
@comment  node-name,  next,  previous,  up
@section project-am-header-noinst
@tgindex project-am-header-noinst

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{project-am-target}.}
@table @code
@item @w{@xref{project-am-header}.}
@table @code
@item project-am-header-noinst
No children
@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type project-am-header-noinst

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-am-macro :AFTER this 
Return the default macro to 'edit' for this object.
@end deffn


@node project-am-header-inst, project-am-lisp, project-am-header-noinst, Targets
@comment  node-name,  next,  previous,  up
@section project-am-header-inst
@tgindex project-am-header-inst

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{project-am-target}.}
@table @code
@item @w{@xref{project-am-header}.}
@table @code
@item project-am-header-inst
No children
@end table

@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type project-am-header-inst

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-am-macro :AFTER this 
Return the default macro to 'edit' for this object.
@end deffn


@node project-am-lisp, project-am-texinfo, project-am-header-inst, Targets
@comment  node-name,  next,  previous,  up
@section project-am-lisp
@tgindex project-am-lisp

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{project-am-target}.}
@table @code
@item project-am-lisp
No children
@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type project-am-lisp

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-am-macro :AFTER this 
Return the default macro to 'edit' for this object.
@end deffn

@deffn Method project-rescan :AFTER this 
Rescan the lisp sources.
@end deffn

@deffn Method ede-buffer-mine :AFTER this buffer 
Return @code{t} if object @var{THIS} lays claim to the file in @var{BUFFER}.
@end deffn


@node project-am-texinfo, project-am-man, project-am-lisp, Targets
@comment  node-name,  next,  previous,  up
@section project-am-texinfo
@tgindex project-am-texinfo

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{project-am-target}.}
@table @code
@item project-am-texinfo
No children
@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type project-am-texinfo

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@item :include @*
Default Value: @code{nil}

Additional texinfo included in this one.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-am-macro :AFTER this 
Return the default macro to 'edit' for this object type.
@end deffn

@deffn Method project-rescan :AFTER this 
Rescan object @var{THIS}.
@end deffn

@deffn Method project-compile-target-command :AFTER this 
Default target t- use when compling a texinfo file.
@end deffn

@deffn Method ede-buffer-mine :AFTER this buffer 
Return @code{t} if object @var{THIS} lays claim to the file in @var{BUFFER}.
@end deffn

@deffn Method ede-documentation :AFTER this 
Return a list of files that provides documentation.
Documentation is not for object @var{THIS}, but is provided by @var{THIS} for other
files in the project.
@end deffn


@node project-am-man,  , project-am-texinfo, Targets
@comment  node-name,  next,  previous,  up
@section project-am-man
@tgindex project-am-man

@table @asis
@item Inheritance Tree:
@table @code
@item eieio-speedbar
@table @code
@item eieio-speedbar-directory-button
@table @code
@item @w{@xref{ede-target}.}
@table @code
@item @w{@xref{project-am-target}.}
@table @code
@item project-am-man
No children
@end table

@end table

@end table

@end table

@end table
@end table

  Create a new object with name NAME of class type project-am-man

@table @asis
@item Slots:

@table @code
@item :name
Type: @code{string}

Name of this target.
@refill

@item :path
Type: @code{string}

The path to the sources of this target.
Relative to the path of the project it belongs to.
@refill

@end table

@end table
@subsection Specialized Methods

@deffn Method project-am-macro :AFTER this 
Return the default macro to 'edit' for this object type.
@end deffn

@deffn Method project-rescan :AFTER this 
Rescan object @var{THIS}.
@end deffn

@deffn Method ede-buffer-mine :AFTER this buffer 
Return @code{t} if object @var{THIS} lays claim to the file in @var{BUFFER}.
@end deffn


