
DANGER, Will Robinson, DANGER!!!
----------------------------------

************   The dumped dictionary backup files from old versions of the
* WARNING! *   predictive package are *NOT* compatible with this
************   version. You have to convert the dumped file format to the
new format before recreating your dictionaries in this new version.

If you do not do this, you will lose any prefix relationships defined in
the dictionary (see Relationships between Words, Emacs Predictive
Completion Manual) when you recreate the dictionary, though you will
still be able to recreate the same contents and word weights.

I know I promised the dump format was guaranteed to be portable between
predictive versions. I lied.

To port a dictionary to the new version, use the following procedure:

1. backup the dictionay using `predictive-dump-dict-to-file' as just
   described, using the *old* version of the predictive package;

2. start Emacs;

3. load the "predictive-convert-dump-format" library (included in this
   version of the predictive completion package) using

     M-x load-file /path/to/predictive-convert-dump-format.el

4. open the dumped dictionary backup file in Emacs;

5. run the `predictive-convert-dump-format' command;

6. recreate the dictionary using the `predictive-create-dict'
   command (see Creating Dictionaries, Predictive Completion Manual).

Repeat this procedure for each dictionary that you want to port to this
new version.





Obtaining
---------

The current version of the predictive completion package can be obtained
from:

  http://www.dr-qubit.org/emacs.php

Developed and maintained by Toby Cubitt (toby-predictive@dr-qubit.org).




Backing-Up Dictionaries
-----------------------

*************   If you are upgrading from a previous version of the
* IMPORTANT *   predictive completion package, make sure you first backup
*************   any dictionaries you use by dumping the words and data
they contain to files (unless you want to start from scratch). To make
the backups, use

  M-x predictive-dump-dict-to-file

(see Loading and Saving Dictionaries, Emacs Predictive Completion
Manual). It is NOT enough to make a copy of the dictionary file. Only the
plain-text "dumped" format is guaranteed to be portable across different
versions of predictive mode.

Older versions of the predictive completion package saved dictionaries in
a compiled form that was not portable across different versions of
Emacs. Newer versions now automatically save dictionaries in both
compiled and uncompiled forms. If you are upgrading to a different
version of Emacs, but continuing to use the same recent version of the
predictive completion package, then it is sufficient to delete the
compiled dictionary files (extension ".elc", but make sure you do NOT
delete the uncompiled files with extension ".el"!), and let predictive
mode recompile them automatically when the dictionaries are saved.

However, backing up your dictionaries by dumping them to plain-text
files, as described above, is still a very good idea (just to be on the
safe side!).




Installing
----------

To install the package, extract the files using

  tar -xvzf predictive.tar.gz

This will unpack the files into a new directory called predictive/. Now
byte-compile all the Lisp files and create the required dictionaries by
running

  make

in the predictive/ directory. If necessary, you can specify explicitly
where your Emacs resides with

  make EMACS=/path/to/emacs

Then run

  make install

to copy the package files to ~/.emacs.d/predictive/ (the ~/.emacs.d/
directory will be created if it doesn't already exist). If you want to
install the files elsewhere, you can change the default install location
using

  make install DESTDIR=/path/to/install/

and the package files will be copied to the /path/to/install/ directory.

***********  The dictionaries are intended to be user-specific, and MUST
* CAREFUL *  be writable by your user. If you're performing a site-wide
***********  installation of the predictive package, the dictionary files
(all files starting with the prefix "dict-" and ending in ".elc" or
".el") need to be copied to a separate writable directory for each
user. For this reason, the dictionaries will still be installed under
~/.emacs.d/predictive/ even if DESTDIR is specified (you will have to
copy them manually for any other users who want to use predictive). If
you want to change the dictionary install location, use

  make install DICTDIR=/path/to/dictionaries/

This can of course be combined with the DESTDIR option:

  make install DESTDIR=/path/to/install/ DICTDIR=/path/to/dictionaries/

***********  The predictive package includes an enhanced version of the
* CAREFUL *  avl-tree.el library, which is a drop-in replacement for the
***********  version that comes with Emacs. Unless you're prepared to
overwrite or delete the original version, then you MUST make sure that
the replacement version is saved to a path that appears *earlier* in your
`load-path' than the directory containing the original version (which is
usually located somewhere like "/usr/share/emacs/lisp/emacs-lisp/" on
*nix systems), so that the new version masks the old one.

You can view your current load path using `C-h v load-path' from within
Emacs. To verify that the replacement avl-tree.el library is indeed
shadowing the version that comes with Emacs, look at the output of

  M-x list-load-path-shadows

and check that the new avl-tree.el hides the original version.


Finally, put the following lines in your .emacs file (replace the paths
as appropriate if you're not using the default install locations):

  ;; predictive install location
  (add-to-list 'load-path "~/.emacs.d/predictive/")
  ;; dictionary locations
  (add-to-list 'load-path "~/.emacs.d/predictive/latex/")
  (add-to-list 'load-path "~/.emacs.d/predictive/texinfo/")
  (add-to-list 'load-path "~/.emacs.d/predictive/html/")
  ;; load predictive package
  (require 'predictive)

Alternatively, you can save memory and only load the lisp libraries when
they're needed (i.e. when you first run the `predictive-mode' command),
by replacing the final line as follows:

  ;; predictive install location
  (add-to-list 'load-path "~/.emacs.d/predictive/")
  ;; dictionary locations
  (add-to-list 'load-path "~/.emacs.d/predictive/latex/")
  (add-to-list 'load-path "~/.emacs.d/predictive/texinfo/")
  (add-to-list 'load-path "~/.emacs.d/predictive/html/")
  ;; load predictive package
  (autoload 'predictive-mode "~/.emacs.d/predictive/predictive"
            "Turn on Predictive Completion Mode." t)

(Note that "~/.emacs.d/predictive/predictive" is not a typo! The second
"predictive" refers to the "predictive.el" and "predictive.elc" files,
minus the final extension.)


If you want to install the info documentation into your local info
system, you should run the following command AS ROOT:

  make install-info

If your info dir file is not located in /usr/share/info/, then you can
specify its location using

  make install-info INFODIR=/path/to/info/




Manual installation
-------------------

You're of course free to ignore the Makefile-based installation, and
instead do everything manually (if you're not running a POSIX-like
environment, this may be your only option, for example if you're running
Windows and don't have Cygwin installed).


--- Byte-Compiling ---

For performance reasons, it is essential to byte-compile the lisp
code. You can do it manually using `byte-compile-file' or one of the
other Emacs byte-compilation commands (see The Compilation Functions, GNU
Emacs Lisp Reference Manual) for all of the Lisp files contained in the
predictive/ directory.

Personally, I like to use `dired' when byte-compiling multiple files from
within Emacs. (See Operating on Files, GNU Emacs manual.)



--- Creating the Dictionaries ---

The only pre-built dictionary included in the main package is the English
dictionary (so that predictive completion mode works "out of the box",
albeit very slowly if you don't byte-compile!). However, you will get
better results if you roll your own main dictionary (or dictionaries) and
train it to your own writing style. The "dict-english.word-list" file
could serve as a basis for this. (See Getting the Most out of
Dictionaries, Predictive Completion Manual.) Other dictionaries (e.g. for
LaTeX, Texinfo and HTML) are included only as plain-text word lists, from
which the dictionaries can be created. So support for these major modes
will not be available until the dictionaries have been created.

You can create the dictionaries manually using the
`predictive-create-dict' command from within Emacs. You should give the
dictionary the same file name as the word list file, minus the final
".word-list" extension. (See Creating Dictionaries, Emacs Predictive
Completion Manual.)



--- Installing ---

Copy all the Lisp files (files with extensions .el and .elc) to a
directory in your Emacs `load-path' (see Lisp Libraries, GNU Emacs
Manual). You can view the current load-path using `C-h v load-path' in
Emacs, and you can add a directory to it by putting a line such as the
following in your .emacs file:

  (add-to-list 'load-path "/path/to/add/")

***********  Some of the dictionary Lisp files required to support
* CAREFUL *  specific major-modes (e.g. LaTeX, Texinfo and html) may be
***********  in subdirectories of the predictive/ directory
(e.g. predictive/latex/, predictive/texinfo/ and predictive/html/). Note
that Emacs does NOT search the `load-path' recursively, so you must also
ensure that their locations are also in the load-path.

***********  The dictionaries are intended to be user-specific, and MUST
* CAREFUL *  be writable by your user. If you're performing a site-wide
***********  installation of the predictive package, the dictionary files
(all files starting with the prefix "dict-" and ending in ".elc" or
".el") need to be copied to a separate writable directory for each user,
and appropriate load-path lines added to their .emacs files.


If you want the predictive completion minor-mode to be available whenever
you start Emacs, put the following line in your .emacs file after the
load-path lines:

  (require 'predictive)

Alternatively, you can save memory and only load the lisp libraries when
they're needed (i.e. when you first run the `predictive-mode' command),
by putting the following in your .emacs instead:

  (autoload 'predictive-mode "/path/to/predictive/predictive"
            "Turn on Predictive Completion Mode." t)

(Note that "/path/to/predictive/predictive" is not a typo! The second
"predictive" refers to the "predictive.el" and "predictive.elc" files,
minus the final extension.)


Note that loading the predictive package also loads predictive support
for various major modes (currently LaTeX, Texinfo and HTML). If you DON'T
need support for some of these major-modes, you can save a bit of memory
by deleting or commenting out the corresponding lines at the end of
"predictive.el". Don't forget to recompile "predictive.el" after changing
it!




Problems?
---------

Experience suggests that if predictive mode doesn't work at all for you,
it is almost invariably an installation issue, not a show-stopping
bug. (That's not to say predictive is bug-free! Just that the bugs that
no doubt still exist are unlikely to completely prevent predictive from
loading.)

Check the following points carefully, calculate the value of pi (or your
favourite transcendental number) to seven decimal places in your head,
and check the following points again:

1. Can the predictive Lisp libraries (all files with extensions ".elc"
   and ".el") be found somewhere in your Emacs `load-path'? You can check
   the current load-path using `C-h v load-path' from within Emacs.

2. That includes the dictionaries! (Files starting with the prefix
   "dict-" and ending with ".elc" or ".el"). If you forgot about them, go
   back to point 1. and check them too.

3. Are you quite sure ALL the dictionaries can be found in your
   `load-path', including the LaTeX, Texinfo and HTML ones? They're
   probably in the "predictive/latex/" and "predictive/html/"
   subdirectories. If not, go back to point 2. and redo.

4. Are all the dictionaries writable by your user (or the user running
   Emacs)? That includes the "dict-english.el" and "dict-english.elc"
   files, as well as the LaTeX and html dictionaries. If you're not sure
   where all the dictionaries are, go back to point 3. and redo.

5. Have you loaded the predictive package? Remember that the lines added
   to your .emacs file (as described above) will only take effect when
   that file is re-read, usually by restarting Emacs.

6. Have you got the latest version of the predictive completion package?
   There are fairly frequent bug-fix releases, especially after a new
   major release. Check the web-page listed at the top of this
   document. If a newer version is available, download and install it
   following the instructions in the new INSTALL file included in the new
   package (if things still don't work out, you'll end up back here, in
   the new INSTALL file).


If you're reading this, you've somehow managed to exit those labyrinthine
loops, and have either sorted out your problem, or taken a sledgehammer
to your computer (for which I accept no responsibility). If you think the
documentation could be improved to avoid ending up here in the first
place, suggestions are welcome. If you still think you've found a bug,
then reassemble your computer (you really shouldn't keep a sledgehammer
anywhere near your computer you know), and do the following:


1. Start Emacs from the command line using

     emacs -q --no-site-file

   (this prevents loading your .emacs and other startup files, ensuring
   you're starting from a clean slate).


2. Run

     M-: (add-to-list 'load-path "/path/to/predictive/")

  replacing /path/to/predictive/ as appropriate (since the `load-path'
  will not have been updated by your .emacs).


3. If your problem is with LaTeX or html support, add the appropriate
   paths to the `load-path' using

     M-: (add-to-list 'load-path "/path/to/latex/dictionaries/")
     M-: (add-to-list 'load-path "/path/to/html/dictionaries/")

  replacing the paths as appropriate.


4. Load the predictive package manually using

     M-x load-library predictive

  (since it won't have been loaded by your .emacs).


5. Run

     M-x toggle-debug-on-error


6. Repeat the steps that caused the bug.


7. Send an email to the address listed at the top of this document,
   including a copy of any backtrace (it will appear in a separate Emacs
   window called *Backtrace*), along with a precise description of the
   steps required to reproduce the error, and why you think the behaviour
   is wrong (if it's not blatantly obvious). Also state which version of
   Emacs and which version of the predictive package you are using.
