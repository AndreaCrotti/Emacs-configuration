#         -*- mode:org -*-

#+STARTUP:   align
#+TYP_TODO:  TODO IDEA WISH QUESTION INCONSISTENCY BUG | DONE DECLINED 
#+TAGS:      NEW(n)
#+OPTIONS:   H:2 num:t toc:t \n:nil @:t ::t |:t ^:t *:t TeX:t
#+ARCHIVE:   ::** Archived Tasks
#+EMAIL:     carsten.dominik@gmail.com
#+TITLE:     The Org-mode TODO list

* Introduction

This is a loose collection of ideas and TODO items for the future
development of Org-mode.  These ideas come from various sources,
mostly from emacs-orgmode@gnu.org, from direct emails to me, or from
my own day-dreaming.  I don't always mention the source of an idea,
out of laziness.  However, when I implement a good idea, I try to
mention the origin of this idea in the /Acknowledgments/ section of
the manual - let me know if I forgot to give /you/ credit for
something.

** Nomenclature
   On this page, I am using TODO keywords in the following way:
   |-----------------+----------------------------------------------------|
   | *Keyword*       | Intention                                          |
   |-----------------+----------------------------------------------------|
   | *TODO*          | A development  that is going to happen, once I have time or once I figure out how to do it. |
   | *IDEA*          | A new idea, I have not yet decided what if anything I will do about it. |
   | *WISH*          | A wish, probably voiced by someone on  emacs-orgmode@gnu.org.  This is less than a new idea, more a change in existing behavior. |
   | *QUESTION*      | A question someone asked, that needs some thinking before it can be answered |
   | *DECLINED*      | I have decided not to implement this feature, but I am keeping it in the list so that people can see it, complain, or still try to convince me. |
   | *INCONSISTENCY* | Some behavior in Org-mode that is not as clean and consistent as I would like it to be. |
   | *BUG*           | This needs to be fixed, as soon as possible.       |
   | *DONE*          | Well, done is done.                                |
   | /NEW/           | This is a tag, indicating recently added entries   |
   |                 | <50>                                               |
   |-----------------+----------------------------------------------------|

   
* Tasks

** Structure
*** TODO Get rid of all the \r instances, which were used only for XEmacs.
*** WISH proper visibility cycling for items
    Make them not hide the text after the final list item.
    This is not trivial, we cannot usenormal outline stuff,
    needs a separate implementation.

** Agenda issues

** Links
*** WISH Variable of standard links for completion with C-c C-l
    Or something like that, to make standard links fast.

*** IDEA Find all links to a specific file

*** IDEA Make info HTML links work for links to Info files
    Info links of course only work inside Emacs.  However, many info
    documents are on the web, so the HTML exporter could try to be
    smart and convert an Info link into the corresponding link on the
    web.  For example, we could use the GNU software site then
    Name.HTML.  Here is the link to be used:
    http://www.gnu.org/software/emacs/manual/html_node/ Another
    question is, is this URL going to be stable so that it makes sense
    to actually put this into org.el?

*** TODO Document the character protection in links
    I don't think this is really covered anywhere.
    Maybe we also should protect characters in the visible part, to
    make sure thing will never be on two lines...?

*** WISH Radio targets across files
    I guess each org file could write a .orgtargets.filename file, if
    it has any radio targets.

** Tables

*** WISH Row formulas
    @4=.....

*** WISH Make a variable that current line should be recomputed always
    In each table.  Skipping headers of course.


** Exporting

** Publishing


*** TODO Document the :recursive option for org-publish

** Miscellaneous Stuff
*** BUG Comments cannot be filled
    
*** TODO Use the new argument of bibtex-url
    Roland Winkler was kind enough to implement a new argument to the
    `bibtex-url' command that allows me to retrieve the corresponding
    URL, whether it is taken from a URL field or constructed in some
    clever way.  Currently I am not using this, because too many
    people use an old Emacs version which does not have this.
    however, eventually I will implement this.

*** QUESTION Do we need a 43 folders implementation?
    That could easily be done in an org-mode file.  But then, maybe
    this should really be a paper thing. 

*** Priorities
    Here is some information about priorities, which is not yet
    documented.  Actually, I am not sur if the list here is correct
    either
**** QUOTE Priorities
    TODO entries: 1 or 1,2,...
    DEADLINE is 10-ddays, i.e. it is 10 on the due day
                          i.e. it goes above top todo stuff 7 days
                               before due
    SCHEDULED is 5-ddays, i.e. it is 5 on the due date
                          i.e. it goes above top todo on the due day
    TIMESTAMP is 0        i.e. always at bottom
                          but as a deadline it is 100
                          but if scheduled it is 99
    TIMERANGE is 0        i.e. always at bottom
    DIARY is 0            i.e. always at bottom

    Priority * 1000

*** QUESTION grep on directory does not yet work.
    I am actually not sure, I might have addressed this already, but
    my memory is failing me.  Needs some checking.

* COMMENT HTML style specifications

# Local Variables: 
# org-export-html-style: "<link rel=stylesheet href=\"freeshell2.css\" type=\"text/css\"> <style type=\"text/css\"> .tag { color: red; font-weight:bold}</style>" 
# End:
